name: Scala CI

on:
  push:
    branches: [ master, dev ]

jobs:
  build:
    name: Build 🛠️
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: compile
        run: sbt compile

  dependency-graph:
    if: github.ref == 'refs/heads/master'
    name: Update Dependency Graph 📈
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: scalacenter/sbt-dependency-submission@v2

  run_tests:
    name: Test 🧪 and Upload Coverage 📊
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Project and export Coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          sbt clean jacoco
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  publish:
    if: github.ref == 'refs/heads/master'
    name: Publish packages 📦
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1
        with:
          minor-identifier: "#minor"
          major-identifier: "#major"
      - name: Save versions
        run: |
          echo "LATEST_VERSION=${{ steps.version.outputs.version }}" >> $GITHUB_ENV
          echo "PREVIOUS_VERSION=${{ steps.version.outputs.previous-version }}" >> $GITHUB_ENV
      - name: Compare versions
        run: |
          echo ${{ env.PREVIOUS_VERSION }} --> ${{ env.LATEST_VERSION }}
      - name: Publish
        if: ${{ env.LATEST_VERSION != '' && env.PREVIOUS_VERSION != env.LATEST_VERSION }}
        run: sbt publish
        env:
          LATEST_VERSION: ${{ env.LATEST_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
